import os
from aiogram import Bot
from aiogram.types import Message,  InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram import Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from sqlalchemy.future import select
from datetime import datetime
import re
from config import CHANNEL_USERNAME
from database import User, SessionLocal

router = Router()

class LetterState(StatesGroup):
    writing_letter = State()
    entering_name = State()
    entering_group = State()
    entering_send_date = State()
    entering_send_after = State()

async def check_subscription(bot: Bot, user_id: int) -> bool:
    try:
        chat_member = await bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return chat_member.status in ["member", "administrator", "creator"]
    except Exception as e:
        print(f"Error checking subscription: {e}")
        return False

async def delete__message(bot: Bot, user_id: int, chat_id: int):
    try:
        await bot.delete_message(chat_id=user_id, message_id=chat_id)
    except Exception as e:
        print(f"Error deleting message: {e}")

@router.message(Command(commands=['start']))
async def send_start(message: Message):
    inline_k_sub = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="Telegram", url="https://t.me/MPEIcompetence"),
             InlineKeyboardButton(text="–í–ö–æ–Ω—Ç–∞–∫—Ç–µ", url="https://vk.com/mpeicompetence")],
            [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="check_sub")]
        ]
    )
    await message.answer("‚ö°Ô∏è–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ VK –∏ TG.‚ö°Ô∏è", reply_markup=inline_k_sub)
    #await delete__message(bot,user_id=message.chat.id,chat_id=message.message_id)


@router.callback_query()
async def handle_button(callback: CallbackQuery, state: FSMContext, bot: Bot):
    user_id = callback.message.chat.id  # –ü–æ–ª—É—á–µ–Ω–∏–µ user_id –∏–∑ callback –∑–∞–ø—Ä–æ—Å–∞
    chat_id = callback.message.message_id
    inline_test_sub = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="Telegram", url="https://t.me/MPEIcompetence"),
             InlineKeyboardButton(text="–í–ö–æ–Ω—Ç–∞–∫—Ç–µ", url="https://vk.com/mpeicompetence")],
            [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="check_sub")]
        ]
    )
    if callback.data == "check_sub":
        if await check_subscription(bot, user_id):
            async with SessionLocal() as session:
                async with session.begin():
                    user = (await session.execute(select(User).filter_by(user_id=user_id))).scalar()
                    if not user:
                        user = User(user_id=user_id, is_subscribed=True)
                        session.add(user)
                    else:
                        user.is_subscribed = True
                    await session.commit()

            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä —Ä–∞–∑–≤–∏—Ç–∏—è", callback_data="Developmet_C"),
                     InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", callback_data="Event_C")],
                    [InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä —Å–≤—è–∑–µ–π", callback_data="Communication_C"),
                     InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π", callback_data="Competence_C")]
                ]
            )
            await callback.message.answer(f"–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ—Ç–≤–µ—Ä–¥–∏–ª–∞—Å—å, –º–µ–Ω—é!", reply_markup=inline_k_menu)
            await delete__message(bot,user_id,chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)
        await callback.answer()



    elif callback.data == "Menu":
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä —Ä–∞–∑–≤–∏—Ç–∏—è", callback_data="Developmet_C"),
                     InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", callback_data="Event_C")],
                    [InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä —Å–≤—è–∑–µ–π", callback_data="Communication_C"),
                     InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π", callback_data="Competence_C")]
                ]
            )
            await callback.message.answer(f"–ú–µ–Ω—é! {user_id}", reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)





    elif callback.data == 'Developmet_C':
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–ü–∏—Å—å–º–æ –≤ –±—É–¥—É—â–µ–µ", callback_data="Letter_Future"),
                     InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ò–¢–†", callback_data="Sign_ITR")],
                    [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="Menu")]
                ]
            )

            await callback.message.answer(
                text="""–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –Ω–∞–π–¥—ë—Ç–µ –Ω–∞—à–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ —Å–∞–º–æ–º—É —Å–µ–±–µ –≤ –±—É–¥—É—â–µ–µ (–ø–æ–ø—Ä–æ–±—É–π—Ç–µ, —ç—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ!), –∞ —Ç–∞–∫–∂–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è.
    
    –ö–æ–º–∞–Ω–¥–∞ –¶–ö –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–µ–º —Ä–∞–∑–¥–µ–ª–∞, –Ω–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã""",
                reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

    elif callback.data == "Letter_Future":
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–ß–µ—Ä–µ–∑ 4 –≥–æ–¥–∞ (–±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç) üéì", callback_data="Letter_Future_4"),
                     InlineKeyboardButton(text="–ß–µ—Ä–µ–∑ 5 –ª–µ—Ç (—Å–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç) üéì", callback_data="Letter_Future_5")],
                    [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="Developmet_C")]
                ]
            )
            await callback.message.answer(
                text="""–ö–∞–∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤–æ –≤—Ä–µ–º–µ–Ω–∏? ‚è≥
    –ö–∞–∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —É—Å–ø–µ—Ö?
    –ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –Ω–∞ –≤—ã–ø—É—Å–∫–Ω–æ–π —Å–∞–º–æ–º—É —Å–µ–±–µ! üìù
    –ö–æ–≥–¥–∞ –ø—Ä–∏—Å–ª–∞—Ç—å –≤–∞–º –ø–∏—Å—å–º–æ? ü¶âüì®""",
                reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

    elif callback.data == "Letter_Future_4" or callback.data == "Letter_Future_5":
        if await check_subscription(bot, user_id):
            age = int(callback.data.split("_")[2])
            await state.update_data(send_after=age)
            await state.set_state(LetterState.writing_letter)
            await callback.message.answer(
                text=f"""–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, –∫–∞–∫–æ–µ –±—É–¥—É—â–µ–µ –≤–∞—Å –∂–¥–µ—Ç –≤ –∫–æ–Ω—Ü–µ –æ–±—É—á–µ–Ω–∏—è. –û —á–µ–º –≤—ã –º–µ—á—Ç–∞–µ—Ç–µ —Å–µ–π—á–∞—Å? –ö–∞–∫–∏–µ —Å–æ–≤–µ—Ç—ã –¥–∞–ª–∏ –±—ã —Å–µ–±–µ –±—É–¥—É—â–µ–º—É? –ö–∞–∫–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å –∑–∞ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è –≤ –ú–≠–ò?
    –ü—Ä–∏—à–ª–µ–º –≤–∞–º –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ {age} –ª–µ—Ç! –ù–∞–ø–∏—à–∏—Ç–µ –ø–∏—Å—å–º–æ:""")
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

    elif callback.data == "Event_C":
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–°–∫–∏–ª–ª-–ø–∞—Å–ø–æ—Ä—Ç–∞", callback_data="Letter_Future"),
                     InlineKeyboardButton(text="–ö–Ω–∏–∂–Ω—ã–π –∫–ª—É–±", callback_data="Sign_ITR")],
                    [InlineKeyboardButton(text="–î–µ–±–∞—Ç–Ω—ã–π —Ü–µ–Ω—Ç—Ä", callback_data="Letter_Future"),
                     InlineKeyboardButton(text="–ö—É—Ä—Å—ã –†–°–í", callback_data="Sign_ITR")],
                    [InlineKeyboardButton(text="–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Ç–µ—Ö–Ω–æ—Ç–≤–æ—Ä—á–µ—Å—Ç–∞", callback_data="Letter_Future"),
                     InlineKeyboardButton(text="–ê–Ω—Ç–∏–Ω–∞—É—á–Ω–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è", callback_data="Sign_ITR")],
                    [InlineKeyboardButton(text="–£—á—ë–±–∞", callback_data="1")],
                    [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="Menu")]
                ]
            )
            await callback.message.answer("–ß—Ç–æ —Ç–∞–∫–æ–µ —Ü–µ–Ω—Ç—Ä –º–µ—Ä–æ–ø—Ä –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

    elif callback.data == "Communication_C":
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–°–æ–≥–ª–∞—Å–µ–Ω —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å", callback_data="Agree_Participate"),
                     InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é", callback_data="Write_head")],
                    [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="Menu")]
                ]
            )
            await callback.message.answer(
                text="–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é —è –±—É–¥—É –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Ç–µ–±–µ –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ú–≠–ò. –ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤–æ –≤—Å—Ç—Ä–µ—á–∞—Ö, –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É.",
                reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

    elif callback.data == "Competence_C":
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏", callback_data="Basic_competencies"),
                     InlineKeyboardButton(text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏", callback_data="Additional_competencies")],
                    [InlineKeyboardButton(text="–ö–∞–∫ —Ä–∞–∑–≤–∏—Ç—å —Å–≤–æ–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏?", callback_data="Develop_competencies")],
                    [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="Menu")]
                ]
            )
            await callback.message.answer(
                text="""–¶–µ–Ω—Ç—Ä –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –ù–ò–£ "–ú–≠–ò" —ç—Ç–æ:
    
    ‚Äì –º–µ—Å—Ç–æ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è–º–∏ –ø—Ä–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞, –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –Ω–∞—É–∫–∏ –∏ –≤—ã—Å—à–µ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –†–§ –∏ –ê–ù–û "–†–æ—Å—Å–∏—è ‚Äî —Å—Ç—Ä–∞–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π";
    ‚Äì –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —Å—Ä–µ–¥–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞–¥—Ä–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π;
    ‚Äì –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –∫–∞–¥—Ä–æ–≤–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ (–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞).
    
    –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–∞–∏–ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ!""",
                reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

    elif callback.data == "Basic_competencies":
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="Competence_C")]
                ]
            )
            await callback.message.answer(
                text="""–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ —Å–æ—Å—Ç–æ—è—Ç –∏–∑ —Ç–∞–∫–∏—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –∫–∞–∫:
    
    ‚Äì –∞–Ω–∞–ª–∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –≤–∏–¥–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
    ‚Äì –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: –ø—Ä–∏–Ω—è—Ç–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π, –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö –∑–∞–¥–∞—á.
    ‚Äì –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ: —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞, –≤—ã—è–≤–ª–µ–Ω–∏–µ –∏ —É—á—ë—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
    ‚Äì –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤, –æ—Ü–µ–Ω–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ —Å—Ä–æ–∫–æ–≤.
    ‚Äì —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º: —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–æ—Ä–º, —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤, –ø—Ä–æ—Ü–µ–¥—É—Ä –∏ –ø–æ–ª–∏—Ç–∏–∫.
    ‚Äì —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.""",
                reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

    elif callback.data == "Additional_competencies":
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="Competence_C")]
                ]
            )
            await callback.message.answer(
                text="""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ —Å–æ—Å—Ç–æ—è—Ç –∏–∑ —Ç–∞–∫–∏—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –∫–∞–∫:
    
    ‚Äì –ª–∏–¥–µ—Ä—Å—Ç–≤–æ: –ø—Ä–∏–Ω—è—Ç–∏–µ –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –¥—Ä—É–≥–∏—Ö, –º–æ—Ç–∏–≤–∞—Ü–∏—è –ª—é–¥–µ–π –∏ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ö —É—Å–∏–ª–∏–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π.
    ‚Äì —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ: —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º—É –ø–æ–≤—ã—à–µ–Ω–∏—é —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–∞ –∏ –∞–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ —Ä–∞–∑–≤–∏—Ç–∏–µ–º —Å–≤–æ–∏—Ö –Ω–∞–≤—ã–∫–æ–≤.
    ‚Äì –∫–ª–∏–µ–Ω—Ç–æ–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å: –≤—ã—è–≤–ª–µ–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞, –¥–µ–π—Å—Ç–≤–∏–µ –∏—Å—Ö–æ–¥—è –∏–∑ –µ–≥–æ –æ–∂–∏–¥–∞–Ω–∏–π –∏ –ø–æ–∏—Å–∫ –±–∞–ª–∞–Ω—Å–∞ –º–µ–∂–¥—É –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º–∏ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤.
    ‚Äì —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–≤–æ–∏—Ö —ç–º–æ—Ü–∏–π –∏ —ç–º–æ—Ü–∏–π –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π, –∞ —Ç–∞–∫–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —É—á—ë—Ç–æ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –æ–∫—Ä—É–∂–∞—é—â–∏—Ö.
    ‚Äì –∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å: —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–º—É –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ–º—É –ø–æ–≤–µ–¥–µ–Ω–∏—é, –ø–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è –∫ —Å–µ–±–µ.
    ‚Äì –ø–∞—Å—Å–∏–≤–Ω—ã–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å: –Ω–∞–ª–∏—á–∏–µ —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —á–µ–ª–æ–≤–µ–∫ —É–∑–Ω–∞–µ—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è –∏ –ø–æ–Ω–∏–º–∞–µ—Ç –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤ —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ–π —Ä–µ—á–∏.""",
                reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

    elif callback.data == "Develop_competencies":
        if await check_subscription(bot, user_id):
            inline_k_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="Competence_C")]
                ]
            )
            await callback.message.answer(
                text="""–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ä–∞–∑–≤–∏—Ç—å —Å–≤–æ–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏, —Ç–µ–±–µ –Ω—É–∂–Ω–æ:
    
    1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–π –ø—É—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è, –ø—Ä–æ–π–¥—è —Ç–µ—Å—Ç—ã –Ω–∞ —Å–∞–π—Ç–µ (https://softskills.rsv.ru/).
    2. –ò–∑—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ "–†–æ—Å—Å–∏—è ‚Äî —Å—Ç—Ä–∞–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π".
    3. –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –¶–µ–Ω—Ç—Ä–∞ –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –ù–ò–£ "–ú–≠–ò".
    4. –°—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —à–∫–æ–ª—ã –∞–º–±–∞—Å—Å–∞–¥–æ—Ä–æ–≤ "–†–æ—Å—Å–∏—è ‚Äî —Å—Ç—Ä–∞–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"
    5. –û—Ç–∫—Ä—ã—Ç—å –¥–ª—è —Å–µ–±—è "–ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏".
    6. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≤—ã–µ–∑–¥–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∞–º "–ù–∞ –æ–¥–Ω–æ–π –≤–æ–ª–Ω–µ —Å–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏".""",
                reply_markup=inline_k_menu)
            await delete__message(bot, user_id, chat_id)
        else:
            await callback.message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏!",reply_markup=inline_test_sub)
            await delete__message(bot,user_id,chat_id)

@router.message(LetterState.writing_letter)
async def handle_write_letter(message: Message, state: FSMContext):
    if message.content_type != 'text':
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    letter_text = message.text

    await state.update_data(letter_text=letter_text)
    await state.set_state(LetterState.entering_name)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")

@router.message(LetterState.entering_name)
async def handle_entering_name(message: Message, state: FSMContext):
    if message.content_type != 'text':
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    await state.update_data(name=message.text)
    await state.set_state(LetterState.entering_group)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≠–õ-03-24):")

@router.message(LetterState.entering_group)
async def handle_entering_group(message: Message, state: FSMContext):
    if message.content_type != 'text':
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    group_pattern = r"^[A-Za-z–ê-–Ø–∞-—è]{2,3}-\d{2}-\d{2}$"
    if not re.match(group_pattern, message.text):
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≥—Ä—É–ø–ø—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≥—Ä—É–ø–ø—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≠–õ-03-24).")
        return

    await state.update_data(group=message.text)
    await state.set_state(LetterState.entering_send_date)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞–ø–∏—Å–∞–Ω–∏—è –ø–∏—Å—å–º–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î):")

@router.message(LetterState.entering_send_date)
async def handle_entering_send_date(message: Message, state: FSMContext):
    if message.content_type != 'text':
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    try:
        send_date = datetime.strptime(message.text, "%Y-%m-%d")
        await state.update_data(send_date=send_date)
        data = await state.get_data()

        user_id = message.from_user.id
        letter_text = data['letter_text']
        name = data['name']
        group = data['group']
        send_date = data['send_date']
        send_after = data['send_after']

        # Create the directory if it doesn't exist
        letter_directory = "base"
        os.makedirs(letter_directory, exist_ok=True)

        filename = f"{name}, {group}, {send_date.strftime('%Y-%m-%d')}, –ß–µ—Ä–µ–∑ {send_after} –ª–µ—Ç.txt"
        filepath = os.path.join(letter_directory, filename)
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(letter_text)

        async with SessionLocal() as session:
            async with session.begin():
                user = (await session.execute(select(User).filter_by(user_id=user_id))).scalar()
                if not user:
                    user = User(user_id=user_id, name=name, group=group, send_date=send_date, send_after=send_after, letter_filename=filename)
                    session.add(user)
                else:
                    user.name = name
                    user.group = group
                    user.send_date = send_date
                    user.send_after = send_after
                    user.letter_filename = filename
                await session.commit()

        inline_k_menu = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="Menu")],
                [InlineKeyboardButton(text="–ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å –ø–∏—Å—å–º–æ", callback_data="Letter_Future")]
            ]
        )
        await message.answer("–í–∞—à–µ –ø–∏—Å—å–º–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –ú—ã –ø—Ä–∏—à–ª–µ–º –µ–≥–æ –≤–∞–º –≤ –±—É–¥—É—â–µ–µ!", reply_markup=inline_k_menu)
        await state.clear()
    except ValueError:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î:")
